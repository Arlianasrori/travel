// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model users {
  email String @db.VarChar(255) @id
  no_hp String @db.VarChar(12) @unique
  password String @db.VarChar(255)
  name String @db.VarChar(255) 
  foto_profile String? @db.VarChar(1500) 
  isAdmin Boolean @default(false)
  verify Boolean @default(false)

  alamat alamat?
  reviews destination_reviews[]
  notification notification[]
  notification_read notification_read[]
  destination destinations[]
}

model alamat {
  email_user String @db.VarChar(255) @id
  village String @db.VarChar(255)
  subdistrick String @db.VarChar(255)
  regency String @db.VarChar(255)
  province String @db.VarChar(255)
  country String @db.VarChar(255)
  kode_pos Int

  user users @relation(fields: [email_user],references: [email])
}

// user model

model destinations {
  id Int @id
  nama String @db.VarChar(255)
  deks String @db.VarChar(1500)
  thumbnail String @db.VarChar(1500)
  price Int
  add_by String @db.VarChar(255)

  alamat alamat_destination?
  gallery destination_gallery[]
  feature destination_feature[]
  review destination_reviews[]
  my_favorite my_favorite[]
  my_destinations my_destination[]
  weather weather[]
  destination_transportation destination_transportation[]

  user users @relation(fields: [add_by],references: [email])
 
}

model alamat_destination {
  destination_id Int @id
  village String @db.VarChar(500)
  subdistrick String @db.VarChar(500)
  regency String @db.VarChar(500)
  province String @db.VarChar(500)
  country String @db.VarChar(500)
  detail_format String @db.VarChar(500)
  latitude Int 
  longtitude Int

  destination destinations @relation(fields: [destination_id],references: [id])
}

model destination_gallery {
  id Int @id
  destination_id Int
  image String @db.VarChar(1500)

  destination destinations @relation(fields: [destination_id],references: [id])
}

model destination_feature {
  id Int @id
  destination_id Int
  feature_id Int

  destination destinations @relation(fields: [destination_id],references: [id])
  feature feature @relation(fields: [feature_id],references: [id])
}

model feature {
  id Int @id
  nama String @db.VarChar(1500)
  detail String @db.VarChar(1500)

  destination_feature destination_feature[]
}


model destination_reviews {
  id Int @id
  destination_id Int
  comment String @db.VarChar(1500)
  review_by String @db.VarChar(1500)
  ratings Ratings

  user users @relation(fields: [review_by],references: [email])
  destination destinations @relation(fields: [destination_id],references: [id])
  image destination_reviews_image[]
}

model destination_reviews_image {
  id Int @id
  destination_reviews_id Int
  image String @db.VarChar(1500)

  destination_reviews destination_reviews @relation(fields: [destination_reviews_id],references: [id])
}

model my_favorite {
  id Int @id 
  destination_id Int

  destination destinations @relation(fields: [destination_id],references: [id])
}

model my_destination {
  id Int @id
  destination_id Int

  destination destinations @relation(fields: [destination_id],references: [id])
}

// add delete

model weather {
  id Int @id
  destination_id Int
  detail String @db.VarChar(2500)

  destination destinations @relation(fields: [destination_id],references: [id])
}

model notification {
  id Int @id
  user_email String @db.VarChar(255)
  title String @db.VarChar(600)
  deks String @db.VarChar(2500)
  categories_id Int
  
  user users? @relation(fields: [user_email],references: [email])
  categories notification_categories @relation(fields: [categories_id],references: [id])
  read notification_read[]
}

model notification_categories {
  id Int @id
  nama String @db.VarChar(1500)

  notification notification[]
}
model notification_read {
  id Int @id
  notification_id Int
  user_email String @db.VarChar(255)
  is_read Boolean @default(false)
  notification notification @relation(fields: [notification_id],references: [id])
  user users @relation(fields: [user_email],references: [email])
}

model destination_transportation {
  id Int @id
  destination_id Int
  trasnporation_id Int

  destination destinations @relation(fields: [destination_id],references: [id])
  transportation transportation @relation(fields: [trasnporation_id],references: [id])
}

model transportation {
  id Int @id
  transportation String @db.VarChar(1500)
  seats Int
  fasilty_detail String @db.VarChar(1500)
  price Int
  destination_transportation destination_transportation[]
}

enum Ratings {
 sangat_buruk
 buruk
 cukup_baik
 baik
 sangat_baik
}
//  destination model